# The default namespace to be applied to resources. This field is not used to
# enforce or lock down the deployment to a specific namespace, but instead
# provide the default value of the namespace field if one is not specified
# in the manifests.
# Default: default
defaultNamespace: default

# All resources will be assigned to this namespace and if any cluster scoped
# resource exists the deployment will fail.
# Default: ""
namespace: brodul-test

helm:
  # Use a custom location for the Helm chart. This can refer to any go-getter URL.
  # This allows one to download charts from most any location.  Also know that
  # go-getter URL supports adding a digest to validate the download. If repo
  # is set below this field is the name of the chart to lookup
  chart: ./helm/response-hostname
  # A custom release name to deploy the chart as. If not specified a release name
  # will be generated.
  releaseName: brodul-test
  # Any values that should be placed in the `values.yaml` and passed to helm during
  # install.
  values:
    replicaCount: 5

# Target customization are used to determine how resources should be modified per target
# Targets are evaluated in order and the first one to match a cluster is used for that cluster.
targetCustomizations:
  # The name of target. If not specified a default name of the format "target000"
  # will be used. This value is mostly for display
  - name: target000
    # Custom namespace value overriding the value at the root
    # namespace: newvalue
    # Custom kustomize options overriding the options at the root
    # kustomize: {}
    # Custom Helm options override the options at the root
    helm:
      values:
        replicaCount: 10
    # If using raw YAML these are names that map to overlays/{name} that will be used
    # to replace or patch a resource. If you wish to customize the file ./subdir/resource.yaml
    # then a file ./overlays/myoverlay/subdir/resource.yaml will replace the base file.
    # A file named ./overlays/myoverlay/subdir/resource_patch.yaml will patch the base file.
    # A patch can in JSON Patch or JSON Merge format or a strategic merge patch for builtin
    # Kubernetes types. Refer to "Raw YAML Resource Customization" below for more information.
    # yaml:
    #   overlays:
    #   - custom2
    #   - custom3
    # A selector used to match clusters.  The structure is the standard
    # metav1.LabelSelector format. If clusterGroupSelector or clusterGroup is specified,
    # clusterSelector will be used only to further refine the selection after
    # clusterGroupSelector and clusterGroup is evaluated.
    # clusterSelector:
    #   matchLabels:
    #     env: prod
    # A selector used to match cluster groups.
    # clusterGroupSelector:
    #   matchLabels:
    #     region: us-east
    # A specific clusterGroup by name that will be selected
    # clusterGroup: group1
